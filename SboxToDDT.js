const { ipcRenderer} = require('electron');
const fs = require('fs');
const path = require('path');
var $ = require('jquery');
CalculateDDT = document.getElementById("CalculateDDTBtn");
sboxText = document.getElementById("sboxText");
btnChooseFolders = document.getElementById("ChooseFoldersBtn");
btnScan = document.getElementById("ScanBtn");
btnStopScan = document.getElementById("StopScanBtn");
table = document.getElementById("table");
tableBody = document.getElementById("table-body");
tableHead = document.getElementById("table-head");
// ProgressBar = document.getElementById("ProgressBar");
btnReset= document.getElementById("Reset");
iconRefresh = document.getElementById("RefreshIcon");
btnNext= document.getElementById("next");




function DDTToTable(DDT) {
    tableHead.innerHTML = '';
    var headrows = '<tr style="font-size:14px;padding:0px">';
    headrows += ' <th style="width: 50px;position: sticky;z-index:2;left:0; top: -1px;background-color: #B8B8B8;" >'+ '#' +'</th>';
    for (var i = 0; i < DDT[0].length; i++) {
        headrows += ' <th style="width: 50px;position: sticky; top: -1px;background-color: #B8B8B8;" >'+ i +'</th>';
    }
    headrows += '</tr>'
    tableHead.insertAdjacentHTML('beforeend', headrows);
    var rows = '';
    tableBody.innerHTML = '';
    for (var i = 0; i < DDT.length; i++) {
        rows+= '<tr style="font-size:14px;padding:0px">'
        rows+= '<th style="width: 50px;position: sticky;left:0;top: -1px;background-color: #B8B8B8;">'+ i +' </th>';
        for (var j = 0; j < DDT[i].length; j++) {
            rows += '<td align="center" style="width: 30px;padding:2px 2px 2px 2px !important;margin:0px !important;">'+DDT[i][j]+'</td>';
        }
        rows += '</tr>'
    }

    tableBody.insertAdjacentHTML('beforeend', rows);
    table.style.display = "block";
}


CalculateDDT.addEventListener('click', function () {
    // var sbox = "0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01, 0x67, 0x2B, 0xFE, 0xD7, 0xAB, 0x76,  0xCA, 0x82, 0xC9, 0x7D, 0xFA, 0x59, 0x47, 0xF0, 0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4, 0x72, 0xC0,  0xB7, 0xFD, 0x93, 0x26, 0x36, 0x3F, 0xF7, 0xCC, 0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15,  0x04, 0xC7, 0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2, 0xEB, 0x27, 0xB2, 0x75,  0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E, 0x5A, 0xA0, 0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84,  0x53, 0xD1, 0x00, 0xED, 0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB, 0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF,  0xD0, 0xEF, 0xAA, 0xFB, 0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F, 0x50, 0x3C, 0x9F, 0xA8,  0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5, 0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2,  0xCD, 0x0C, 0x13, 0xEC, 0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D, 0x64, 0x5D, 0x19, 0x73,  0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A, 0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14, 0xDE, 0x5E, 0x0B, 0xDB,  0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C, 0xC2, 0xD3, 0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79,  0xE7, 0xC8, 0x37, 0x6D, 0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A, 0xAE, 0x08,  0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6, 0xE8, 0xDD, 0x74, 0x1F, 0x4B, 0xBD, 0x8B, 0x8A,  0x70, 0x3E, 0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E, 0x61, 0x35, 0x57, 0xB9, 0x86, 0xC1, 0x1D, 0x9E,  0xE1, 0xF8, 0x98, 0x11, 0x69, 0xD9, 0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF,  0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99, 0x2D, 0x0F, 0xB0, 0x54, 0xBB, 0x16"
    // 0x0,0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xB, 0xC, 0xd, 0xe, 0xf
    // 0x1,0xa,0x4,0xc,0x6,0xf,0x3,0x9,0x2,0xd,0xb,0x7,0x5,0x0,0x8,0xe
    //0x5E, 0xF9, 0xFC, 0x00, 0x3F, 0x85, 0xBA, 0x5B, 0x18, 0x37, 0xB2, 0xC6, 0x71, 0xC3, 0x74, 0x9D, 0xA7, 0x94, 0x0D, 0xE1, 0xCA, 0x68, 0x53, 0x2E, 0x49, 0x62, 0xEB, 0x97, 0xA4, 0x0E, 0x2D, 0xD0, 0x16, 0x25, 0xAC, 0x48, 0x63, 0xD1, 0xEA, 0x8F, 0xF7, 0x40, 0x45, 0xB1, 0x9E, 0x34, 0x1B, 0xF2, 0xB9, 0x86, 0x03, 0x7F, 0xD8, 0x7A, 0xDD, 0x3C, 0xE0, 0xCB, 0x52, 0x26, 0x15, 0xAF, 0x8C, 0x69, 0xC2, 0x75, 0x70, 0x1C, 0x33, 0x99, 0xB6, 0xC7, 0x04, 0x3B, 0xBE, 0x5A, 0xFD, 0x5F, 0xF8, 0x81, 0x93, 0xA0, 0x29, 0x4D, 0x66, 0xD4, 0xEF, 0x0A, 0xE5, 0xCE, 0x57, 0xA3, 0x90, 0x2A, 0x09, 0x6C, 0x22, 0x11, 0x88, 0xE4, 0xCF, 0x6D, 0x56, 0xAB, 0x7B, 0xDC, 0xD9, 0xBD, 0x82, 0x38, 0x07, 0x7E, 0xB5, 0x9A, 0x1F, 0xF3, 0x44, 0xF6, 0x41, 0x30, 0x4C, 0x67, 0xEE, 0x12, 0x21, 0x8B, 0xA8, 0xD5, 0x55, 0x6E, 0xE7, 0x0B, 0x28, 0x92, 0xA1, 0xCC, 0x2B, 0x08, 0x91, 0xED, 0xD6, 0x64, 0x4F, 0xA2, 0xBC, 0x83, 0x06, 0xFA, 0x5D, 0xFF, 0x58, 0x39, 0x72, 0xC5, 0xC0, 0xB4, 0x9B, 0x31, 0x1E, 0x77, 0x01, 0x3E, 0xBB, 0xDF, 0x78, 0xDA, 0x7D, 0x84, 0x50, 0x6B, 0xE2, 0x8E, 0xAD, 0x17, 0x24, 0xC9, 0xAE, 0x8D, 0x14, 0xE8, 0xD3, 0x61, 0x4A, 0x27, 0x47, 0xF0, 0xF5, 0x19, 0x36, 0x9C, 0xB3, 0x42, 0x1D, 0x32, 0xB7, 0x43, 0xF4, 0x46, 0xF1, 0x98, 0xEC, 0xD7, 0x4E, 0xAA, 0x89, 0x23, 0x10, 0x65, 0x8A, 0xA9, 0x20, 0x54, 0x6F, 0xCD, 0xE6, 0x13, 0xDB, 0x7C, 0x79, 0x05, 0x3A, 0x80, 0xBF, 0xDE, 0xE9, 0xD2, 0x4B, 0x2F, 0x0C, 0xA6, 0x95, 0x60, 0x0F, 0x2C, 0xA5, 0x51, 0x6A, 0xC8, 0xE3, 0x96, 0xB0, 0x9F, 0x1A, 0x76, 0xC1, 0x73, 0xC4, 0x35, 0xFE, 0x59, 0x5C, 0xB8, 0x87, 0x3D, 0x02, 0xFB
    //console.log(sboxText.value);
    var sbox = sboxText.value;
    sbox.replace(" ", "");
    var sboxArr = sbox.split(",")
    for( var i = 0; i < sboxArr.length; i++ ){
        sboxArr[i] = parseInt(sboxArr[i])
    }
    var XOR_IN = 0;
    var XOR_OUT = 0;
    var DDT = new Array(sboxArr.length);

    for( var i = 0; i < DDT.length; i++ ){
        DDT[i] = new Array(sboxArr.length).fill(0);
    }

    for( var i = 0; i < sboxArr.length; i++ ){
        for( var j = 0; j < sboxArr.length; j++ ){
            XOR_IN = i ^ j;
            XOR_OUT = sboxArr[i] ^ sboxArr[j]
            DDT[XOR_IN][XOR_OUT]++;
        }
        
    }

    DDTToTable(DDT);
    // console.log(sboxArr);
    // console.log(DDT);
    (async () => {
        const result = await ipcRenderer.invoke('setDDT', DDT);
        // console.log(result); 
    })();


});
Reset.addEventListener('click', function () {
    sboxText.innerHTML = '';
    (async () => {
        const result = await ipcRenderer.invoke('setDDT', null);
        console.log(result); 
    })();
    location.reload();
});

btnNext.addEventListener('click', function () {
    // console.log("test");
    ipcRenderer.send('DDTToTT');
});